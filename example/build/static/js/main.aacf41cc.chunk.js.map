{"version":3,"sources":["../../src/index.js","App.js","index.js"],"names":["arkw","ArkConfig","get","key","p","set","val","lst","cur","idx","App","className","style","color","paddingLeft","data-title","type","defaultValue","id","rows","placeholder","onClick","document","getElementById","value","innerText","ReactDOM","render"],"mappings":"kLACIA,EAAJ,OACaC,EAgBJ,CACLC,IAhBUC,YAAG,OAAKA,GAAD,uBAA8B,qBAAUC,GAAKA,EAALA,IAAxC,OAAnB,IAiBEC,IAhBU,SAACF,EAAKG,GAChB,IAAIC,GAAOJ,GAAD,UAAV,KACA,GAAKI,EAAL,QACA,IAAIC,EAAJ,EACAD,WAAY,cACVC,KAASA,MAATA,GACIC,GAAOF,SAAX,EACEC,OAEAA,EAAMA,EAANA,MAGJA,OC4IWE,EAzJH,WAEV,OAAO,6BAEL,yBAAKC,UAAU,WAEb,wBAAIC,MAAO,CAAEC,MAAO,YAApB,+DAFF,IAEuG,6BAErG,6BACE,0BAAMD,MAAO,CAAEE,YAAa,SAA5B,4BAC2B,6BAAM,6BADjC,wCAMF,6BACE,0BAAMF,MAAO,CAAEE,YAAa,SAA5B,yBACwB,6BAAM,6BAD9B,UAEQ,cAFR,6BAMF,6BACE,qFACsD,6BADtD,6EAEF,6BAFE,6MAkBE,+BAIJ,yBAAKH,UAAU,SAEb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,QAAf,WAGA,yBAAKA,UAAU,QAAf,SAGA,yBAAKA,UAAU,QAAf,WAKF,yBAAKA,UAAU,OACb,yBAAKA,UAAU,OAAOI,aAAW,QAAjC,uBAGA,yBAAKJ,UAAU,OAAOI,aAAW,OAC9B,iCAEH,yBAAKJ,UAAU,OAAOI,aAAW,cAAjC,UAIF,yBAAKJ,UAAU,OACb,yBAAKA,UAAU,OAAOI,aAAW,QAAjC,uCAGA,yBAAKJ,UAAU,OAAOI,aAAW,OAC9B,qHAEH,yBAAKJ,UAAU,OAAOI,aAAW,cAAjC,0BAIF,yBAAKJ,UAAU,OACb,yBAAKA,UAAU,OAAOI,aAAW,QAAjC,oCAGA,yBAAKJ,UAAU,OAAOI,aAAW,OAC7B,8CAEJ,yBAAKJ,UAAU,OAAOI,aAAW,cAC9B,oBAIL,yBAAKJ,UAAU,OACb,yBAAKA,UAAU,OAAOI,aAAW,QAAjC,sBAGA,yBAAKJ,UAAU,OAAOI,aAAW,OAC9B,2DAEH,yBAAKJ,UAAU,OAAOI,aAAW,cAC7B,MAMR,yBAAKJ,UAAU,SAEb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,QAAf,iBAGA,yBAAKA,UAAU,QAAf,SAGA,yBAAKA,UAAU,QAAf,OAGA,yBAAKA,UAAU,QAAf,QAKF,yBAAKA,UAAU,OACb,yBAAKA,UAAU,QACb,2BAAOK,KAAK,OAAOC,aAAa,MAAMC,GAAG,UAE3C,yBAAKP,UAAU,QACb,8BAAUQ,KAAK,IAAIF,aAAY,uCAMjC,yBAAKN,UAAU,OAAOI,aAAW,YAAjC,kBACiB,2BAAOC,KAAK,OAAOE,GAAG,QAAQD,aAAa,OAAOG,YAAY,6BAD/E,IAC6G,6BAAM,6BADnH,qCAEoC,2BAAOJ,KAAK,OAAOE,GAAG,OAAOD,aAAa,UAAUG,YAAY,wCAFpG,IAE6I,6BAAM,6BACjJ,4BAAQC,QAAS,kBAAMpB,EAAUI,IAAIiB,SAASC,eAAe,SAASC,MAAOF,SAASC,eAAe,QAAQC,SAA7G,cAEF,yBAAKb,UAAU,OAAOI,aAAW,UAAjC,kCACoC,6BADpC,IAC2C,6BACzC,4BAAQM,QAAS,kBAAMC,SAASC,eAAe,QAAQE,UAAYxB,EAAUC,IAAIoB,SAASC,eAAe,SAASC,SAAlH,aAFF,IAE+I,6BAAM,6BACnJ,0BAAMN,GAAG,SAHX,IAG0B,mC,OC5IpCQ,EAASC,OAAO,kBAAC,EAAD,MAASL,SAASC,eAAe,U","file":"static/js/main.aacf41cc.chunk.js","sourcesContent":["import React from 'react'\nvar arkw = window;\nexport const ArkConfig = (() => {\n  const get = key => (key || '').split('.').reduce((p, c) => p && p[c] || null, arkw);\n  const set = (key, val) => {\n    var lst = (key || '').split('.');\n    if (!lst.length) return;\n    var cur = arkw;\n    lst.forEach((t, idx) => {\n      cur[t] = cur[t] || {};\n      if (idx == lst.length - 1) {\n        cur[t] = val;\r\n      } else {\n        cur = cur[t];\n      }\r\n    });\n    cur = val;\r\n  }\n  return {\n    get: get,\n    set: set\n  }\n})();\n","import React from 'react'\r\nimport { ArkConfig } from 'ark-react-config'\r\n\r\nconst App = () => {\n\r\n  return <div>\n\n    <div className=\"wrapper\">\n\n      <h1 style={{ color: \"#aba6a6\" }}>Ark Config -&gt; Simple ReAct Library to read global variables</h1> <br />\n\n      <pre>\n        <code style={{ paddingLeft: \"40px\" }}>\n          npm package installtion: <br /><br />\n              npm install --save ark-react-config\n      </code>\r\n      </pre>\n\n      <pre>\n        <code style={{ paddingLeft: \"40px\" }}>\n          declare in component: <br /><br />\n        import {\"{ArkConfig}\"} from 'ark-react-config'\n      </code>\r\n      </pre>\n\n      <pre>\n        <code>\n          This is the sample global variable used in the page <br />declare below variable in public html page or at the global json file load\n      <br />\r\n          {\r\n            `\r\n      var obj = {\r\n        one: \"Lord\",\r\n        two: {\r\n          two: \"Jesus\"\r\n        },\r\n        three1: {\r\n          three2: {\r\n            three3: \"my Saviour\"\r\n          }\r\n        }\r\n      }\r\n`\r\n          }\n          <br />\n        </code>\r\n      </pre>\n\r\n      <div className=\"table\">\r\n\r\n        <div className=\"row header green\">\r\n          <div className=\"cell\">\r\n            Senario\r\n      </div>\r\n          <div className=\"cell\">\r\n            Usage\r\n      </div>\r\n          <div className=\"cell\">\r\n            Output\r\n      </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"cell\" data-title=\"Name\">\r\n            Get Primitive Value\r\n      </div>\r\n          <div className=\"cell\" data-title=\"Age\">\r\n            {\"ArkConfig.get('obj.two.two')}\"}\r\n          </div>\r\n          <div className=\"cell\" data-title=\"Occupation\">\r\n            Jesus\r\n      </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"cell\" data-title=\"Name\">\r\n            Get Nested Property Primitive Value \r\n      </div>\r\n          <div className=\"cell\" data-title=\"Age\">\r\n            {\"{ArkConfig.get('obj.one') + ' ' + ArkConfig.get('obj.two.two') + ' ' + ArkConfig.get('obj.three1.three2.three3')}\" }\r\n      </div>\r\n          <div className=\"cell\" data-title=\"Occupation\">\r\n            Lord Jesus my Saviour\r\n      </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"cell\" data-title=\"Name\">\r\n            Get Nested Property Object Value \r\n      </div>\r\n          <div className=\"cell\" data-title=\"Age\">\r\n            { \"{JSON.stringify(ArkConfig.get('obj.two'))}\" }\r\n      </div>\r\n          <div className=\"cell\" data-title=\"Occupation\">\r\n            {'{\"two\":\"Jesus\"}'}\r\n      </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"cell\" data-title=\"Name\">\r\n            Set Property Value\r\n      </div>\r\n          <div className=\"cell\" data-title=\"Age\">\r\n            {\"ArkConfig.set('obj.three1.three2.three3', 'my Master')}\"}\r\n      </div>\r\n          <div className=\"cell\" data-title=\"Occupation\">\r\n            { \"\" }\r\n      </div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <div className=\"table\">\r\n\r\n        <div className=\"row header blue\">\r\n          <div className=\"cell\">\r\n            variable name\r\n      </div>\r\n          <div className=\"cell\">\r\n            value\r\n      </div>\r\n          <div className=\"cell\">\r\n            set\r\n      </div>\r\n          <div className=\"cell\">\r\n            get\r\n      </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"cell\">\r\n            <input type=\"text\" defaultValue=\"emp\" id=\"gvar\" />\r\n      </div>\r\n          <div className=\"cell\">\r\n            <textarea rows=\"5\" defaultValue={`{\n  name: 'David',\n  age: 34\r\n}`}>\n            </textarea>\r\n      </div>\r\n          <div className=\"cell\" data-title=\"Password\">\n            Property Path: <input type=\"text\" id=\"props\" defaultValue=\"name\" placeholder=\"property path (emp.name)\" /> <br /><br />\n            Property value to be Overwritten: <input type=\"text\" id=\"pval\" defaultValue=\"Goliath\" placeholder=\"value to be over written or created\" /> <br /><br />\r\n            <button onClick={() => ArkConfig.set(document.getElementById(\"props\").value, document.getElementById(\"pval\").value)}>Set Value</button>\r\n      </div>\r\n          <div className=\"cell\" data-title=\"Active\">\n            Get value from property path &gt; <br /> <br />\r\n            <button onClick={() => document.getElementById(\"idss\").innerText = ArkConfig.get(document.getElementById(\"props\").value)}>Get Value</button> <br /><br />\n            <span id=\"idss\"></span> <br />\r\n      </div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n    </div>\r\n      </div>\r\n}\r\n\r\nexport default App\r\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}